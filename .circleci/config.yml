version: 2.1 # Use 2.1 to enable using orbs and other features.

# Declare the orbs that we'll use in our config.
# read more about orbs: https://circleci.com/docs/2.0/using-orbs/
orbs:
  ruby: circleci/ruby@1.0

jobs:
  build:  # our next job, called "build"
    # we run "parallel job containers" to enable speeding up our tests;
    # this splits our tests across multiple containers.
    parallelism: 3
    # here we set TWO docker images.
    docker:
      - image: cimg/ruby:2.7.1-node # this is our primary docker image, where step commands run.
      - image: circleci/postgres:9.6.9-alpine
        environment: # add POSTGRES environment variables.
          POSTGRES_USER: db_user
          POSTGRES_DB: test_db
          POSTGRES_PASSWORD: ""
    # environment variables specific to Ruby/Rails, applied to the primary container.
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: db_user
      PGPASSWORD: ""
      RAILS_ENV: test
      DEVISE_JWT_SECRET_KEY: jwt_key_example
      DATABASE_NAME: db_name
      TEST_DATABASE_NAME: db_name_test
      DATABASE_HOST: localhost
      DATABASE_USER: db_user
      DATABASE_PASSWORD: ""
      DATABASE_PORT: 5432
    # A series of steps to run, some are similar to those in "build".
    steps:
      - checkout
      - ruby/install-deps

      - run:
          name: Rubocop checks
          command: bundle exec rubocop

      # Here we make sure that the secondary container boots
      # up before we run operations on the database.
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bundle exec rails db:create && bundle exec rails db:schema:load --trace

      # Run rspec in parallel
      - ruby/rspec-test

# We use workflows to orchestrate the jobs that we declared above.
workflows:
  version: 2
  build:     # The name of our workflow is "build_and_test"
    jobs:             # The list of jobs we run as part of this workflow.
      - build         # Then run build,
